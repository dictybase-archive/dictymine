/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at ht tps://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
import org.dictybase.task.TorqueModelOutputTask;

def getOsName = { project ->
    project.hasProperty('storage') ? project.findProperty('storage') : 'os.production'
}

buildscript {
    repositories {
        maven {
            url "file://${rootDir}/intermine/repo"
        }
        // maven central
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.dictybase', name: 'dictymine-tasks', version: '1.7'
    }
}

task publishAll(
    dependsOn: [
        ':intermine:api:publish',
        ':intermine:api:model:userprofile:publish',
        ':intermine:integrate:publish',
        ':intermine:integrate:model:fulldata:publish',
        ':intermine:jbrowse-endpoint:publish',
        ':intermine:model:publish',
        ':intermine:objectstore:publish',
        ':intermine:pathquery:publish',
        ':intermine:web:publish',
        ':intermine:webservice:client:publish',
        ':intermine:webtasks:publish',
        ':bio:tools:publish',
        ':bio:webapp:publish',
        ':bio:core:publish',
        ':imbuild:im-ant-tasks:publish',
        ':dictymine:dbmodel:publish',
        ':tasks:publish'
    ]
)

subprojects {
	// Apply the java-library plugin to add support for Java
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    sourceCompatibility = 1.6
    compileJava.options.bootClasspath = file(System.getenv("JAVA_HOME") + "/jre/lib/rt.jar")

// In this section you declare where to find the dependencies of your project
    repositories {
		// Multiple local folders
		flatDir {
			dirs "${projectDir}/main/lib", "${projectDir}/lib", "${rootDir}/intermine/lib"
		}
        maven {
            url "file://${rootDir}/intermine/repo"
        }
		// maven central
        mavenCentral()
	}

    publishing {
        repositories {
            maven {
                url "file://${rootDir}/intermine/repo"
            }
        }
    }

    configurations {
        log4j
        lang
        bbop
        collections
        obo
        pg
        hikari
        torquegen
        objectstore
        integrate
    }

    dependencies {
        objectstore project(':intermine:objectstore')
        integrate project(':intermine:integrate')
        log4j group: 'log4j', name: 'log4j', version: '1.2.7'
        lang group: 'commons-lang', name: 'commons-lang', version: '2.6'
        bbop group: 'obo', name: 'bbop', version: '1.000'
        collections group: 'commons-collections', name: 'commons-collections', version: '3.2'
        obo group: 'obo', name: 'obo', version: '1.000'
        pg group: 'org.postgresql', name: 'postgresql', version: '9.4.1212.jre7'
        hikari group: 'com.zaxxer', name: 'HikariCP-java6', version: '2.3.8'
        torquegen group: 'torque', name: 'torque-gen', version: '3.3'
    }

// Default structure of java library 
    sourceSets {
        main {
            java {
                srcDirs = ['main/src']
            }
            resources {
                srcDirs = ['main/resources']
            }
        }
    }

    ext {
        mineName = System.getenv("INTERMINE_NAME") != null ? System.getenv("INTERMINE_NAME") : 'dictymine'
        mineDir = file("${rootDir}/${mineName}")
        sourceDir = "${rootDir}/bio/sources"
        projectXml = new XmlParser().parse("${mineDir}/project.xml")
        mineSources = projectXml.sources.source.collect{ it.@type } 
        minePropDir = null
        osName = null
        model = null
    }

    task testConfiguration {
        doLast {
            println configurations.objectstore.asPath
        }
    }

	task createBuildFolder {
		description 'Create build folders for generating classes'
		doLast {
			FileCollection collection = files(
							"${buildDir}/model",
							"${buildDir}/main",
							"${buildDir}/tmp",
							"${buildDir}/classes",
							"${buildDir}/gen/src",
						)
			collection.each { File file -> 
				file.mkdirs()
			}
		}
	}

	task copyLog4jProp(type: Copy, dependsOn: createBuildFolder) {
		description 'Copies log properites and xml model files to build directory'
		from "${rootDir}/imbuild"
		into "${buildDir}/main"
        include "task.log4j.properties"
        rename "task.log4j.properties","log4j.properties"
    }

    task checkPropFile {
        description 'Check for mine properties file, if absent throws error'
        minePropDir = file(System.getenv("HOME") + '/.intermine')
        if (!minePropDir.exists()) {
            if (System.getenv("INTERMINE_PROPERTY_DIR") == null) {
                throw new StopActionException("could not find mine properties file !!!!")
            } else {
                minePropDir = System.getenv("INTERMINE_PROPERTY_DIR")
            }
        }
    }

    task copyDefaultProperty(type: Copy, dependsOn: createBuildFolder) {
        description 'Copy the default mine property files to build folder'
        from mineDir 
        into "${buildDir}/main"
        include "default.intermine.integrate.properties"
        rename "default.intermine.integrate.properties", "default.intermine.properties" 
    }

    task copyMineProperty(type: Copy, dependsOn: [createBuildFolder, checkPropFile]) {
        description 'Copy the mine specific property files to build folder'
        from minePropDir
        into "${buildDir}/main"
        include "${mineName}.properties"
        rename "${mineName}.properties", "intermine.properties"
    }

    task buildXmlModel(type: TorqueModelOutputTask, dependsOn: createBuildFolder) {
        description 'generate xml object model for loading in database'

        osName = getOsName(project)
        destFile = file("${buildDir}/main/${getOsName(project)}-schema.xml")
        property = file("${buildDir}/main/default.intermine.properties")
    }

    task prepareDb(dependsOn: [buildXmlModel, copyMineProperty, copyLog4jProp]) {
        description 'prepare database(objectstorage) before loading object model'
        doLast {
            ant.taskdef(
                name: 'preparedb',
                classname: 'org.intermine.task.BuildDbTask'
            ) {
                classpath {
                    pathelement(path: configurations.builder.asPath)
                    pathelement(path: "${buildDir}/main")
                }
            }
            ant.preparedb(
                osName: osName,
                tempdir: "${buildDir}/tmp",
                schemafile: "${osName}-schema.xml",
                model: model
            )
        }
    }


    task insertModel(dependsOn: prepareDb) {
        description 'load object model in database(objectstorage)'
        doLast {
            ant.taskdef(
                name: 'insertmodel',
                classname: 'org.intermine.task.StoreMetadataTask'
            ) {
                classpath {
                    pathelement(path: configurations.builder.asPath)
                    pathelement(path: "${buildDir}/main")
                    pathelement(path: "${buildDir}/model")
                }
            }
            ant.insertmodel(
                osName: osName,
                modelName: model
            )
        }
    }

    task createIndexes(dependsOn: [
            ':intermine:objectstore:jar',
            ':intermine:integrate:jar'
            ]) {
        description 'create indexes in database(objectstorage)'
        doLast {
            ant.taskdef(
                name: 'createindexes',
                classname: 'org.intermine.task.CreateIndexesTask'
            ) {
                classpath {
                    pathelement(path: configurations.integration.asPath)
                    pathelement(path: sourceSets.main.output.classesDir)
                    pathelement(path: "${buildDir}/main")
                    pathelement(path: "${buildDir}/model")
                }
            }
            ant.createindexes(
                alias: osName
            )
        }
    }


    task analyseDb {
        description 'generate query statistics for database(objectstorage)'
        doLast {
            ant.taskdef(
                name: 'analysedb',
                classname: 'org.intermine.task.AnalyseDbTask'
            ) {
                classpath {
                    pathelement(path: configurations.integration.asPath)
                    pathelement(path: sourceSets.main.output.classesDir)
                    pathelement(path: "${buildDir}/main")
                    pathelement(path: "${buildDir}/model")
                }
            }
            ant.analysedb(
                osName: osName
            )
        }
    }

}

project(':intermine:api') {
    dependencies {
		api project(':intermine:objectstore')
		api project(':intermine:pathquery')
		api project(':intermine:api:model:userprofile')
        api group: 'org.apache.ant', name: 'ant', version: '1.6.5'
        api group: 'com.browseengine.bobo', name: 'bobo-browse', version: '2.5.1'
        api group: 'org.apache.lucene', name: 'lucene-queries', version: '3.0.2'
        api group: 'org.json', name: 'json', version: '20110106'
        implementation group: 'it.unimi.dsi', name: 'fastutil', version: '6.1.0'
        implementation group: 'com.linkedin.kamikaze', name: 'kamikaze', version: '2.0.0'
        implementation group: 'org.apache.lucene', name: 'lucene-core', version: '3.0.2'
        implementation group: 'org.apache.lucene', name: 'lucene-highlighter', version: '3.0.2'
        implementation group: 'org.apache.lucene', name: 'lucene-snowball', version: '3.0.2'
        implementation group: 'xalan', name: 'xalan', version: '2.7.0'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'api'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':intermine:api:model:userprofile') {
    sourceSets {
        main {
            java {
                srcDirs = ["${buildDir}/gen/src"]
            }
            resources {
                srcDirs = ['resources']
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'userprofile'
                version '1.7'

                from components.java
            }
        }
    }

    configurations {
        log4j
        lang
    }

	dependencies {
		api project(':intermine:model')
        api project(':intermine:objectstore')
        log4j group: 'log4j', name: 'log4j', version: '1.2.7'
        lang group: 'commons-lang', name: 'commons-lang', version: '2.6'
	}

	task copyFiles(type: Copy) {
		description 'Copies log4j properites and xml model files to build directory'
		from "${rootDir}/imbuild/task.log4j.properties"
		into "${buildDir}/main"

		from "${projectDir}/userprofile_model.xml"
		into "${buildDir}/main"
	}

	task generateModel(dependsOn: [createBuildFolder, copyFiles]) {
		description 'Generate model classes from xml definition file'
		doLast {
			ant.taskdef(
				name: 'modelOutput',
				classname: 'org.intermine.task.ModelOutputTask'
            ){
                classpath {
                    pathelement(path: project(':intermine:objectstore').sourceSets.main.output.classesDir)
                    pathelement(path: project(':intermine:model').sourceSets.main.output.classesDir) 	
                    pathelement(path: configurations.log4j.asPath)
                    pathelement(path: configurations.lang.asPath)
                    pathelement(path: "${buildDir}/main")
                }
            }
			ant.modelOutput(
				type: 'java',
				model: 'userprofile',
				destdir: "${buildDir}/gen/src"
			)
		}
	}

    compileJava.dependsOn(generateModel)
}


project(':intermine:integrate:model:fulldata') {
    sourceSets {
        main {
            java {
                srcDirs = ["${buildDir}/gen/src"]
            }
            resources {
                srcDirs = ["${buildDir}/main", "resources"]
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'fulldata'
                version '1.7'

                from components.java
            }
        }
    }


    configurations {
        log4j
        lang
    }

	dependencies {
		api project(':intermine:objectstore')
        log4j group: 'log4j', name: 'log4j', version: '1.2.7'
        lang group: 'commons-lang', name: 'commons-lang', version: '2.6'
    }

	task copyFiles(type: Copy, dependsOn: createBuildFolder) {
		description 'Copies xml model files to build directory'
		from "${projectDir}/fulldata_model.xml"
		into "${buildDir}/main"
	}

	task generateModel(dependsOn: copyFiles) {
		description 'Generate model classes from xml definition file'
		doLast {
			ant.taskdef(
				name: 'fulldataModelOutput',
				classname: 'org.intermine.task.ModelOutputTask'
            ){
                classpath {
                    pathelement(path: project(':intermine:objectstore').sourceSets.main.output.classesDir)
                    pathelement(path: project(':intermine:model').sourceSets.main.output.classesDir) 	
                    pathelement(path: configurations.log4j.asPath)
                    pathelement(path: configurations.lang.asPath)
                    pathelement(path: "${buildDir}/main")
                }
            }
			ant.fulldataModelOutput(
				type: 'java',
				model: 'fulldata',
				destdir: "${buildDir}/gen/src"
			)
		}
	}
    compileJava.dependsOn(generateModel)
}

project(':intermine:integrate') {
    dependencies {
        api project(':intermine:integrate:model:fulldata')
        api group: 'org.apache.ant', name: 'ant', version: '1.6.5'
       	implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.26'
       	implementation group: 'stax', name: 'stax-ri', version: '1.0'
    }


    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'integrate'
                version '1.7'

                from components.java
            }
        }
    }
}


project(':intermine:model') {
    dependencies {
        api group: 'commons-collections', name: 'commons-collections', version: '3.2'
        api group: 'commons-lang', name: 'commons-lang', version: '2.6'
        api group: 'commons-io', name: 'commons-io', version: '1.2'
        api group: 'log4j', name: 'log4j', version: '1.2.7'
        implementation group: 'org.ow2.asm', name: 'asm-all', version: '4.2'
        implementation group: 'org.ow2.asm', name: 'asm-util', version: '4.2'
        implementation group: 'cglib', name: 'cglib', version: '3.1'
        implementation group: 'org.json', name: 'json', version: '20131018'
        implementation group: 'stax', name: 'stax-api', version: '1.0.1'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'model'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':intermine:objectstore') {
		
	apply plugin: 'antlr'

    sourceSets {
        main {
            antlr {
                srcDirs = ['main/src']
            }
        }
    }


    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'objectstore'
                version '1.7'

                from components.java
            }
        }
    }

    dependencies {
        api project(':intermine:model')
        api group: 'net.sourceforge.iharder', name: 'base64', version: '2.3.8'
		api group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
		api group: 'org.postgresql', name: 'postgresql', version: '9.4.1212.jre7'
		implementation group: 'org.apache.torque', name: 'torque', version: '3.3'
		implementation group: 'torque', name: 'torque-gen', version: '3.3'
		api group: 'com.zaxxer', name: 'HikariCP-java6', version: '2.3.8'
        implementation group: 'cglib', name: 'cglib', version: '3.1'
        implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.6.1'
		implementation group: 'commons-digester', name: 'commons-digester', version: '2.1'
		implementation group: 'org.javassist', name: 'javassist', version: '3.18.2-GA'
		implementation group: 'javax.xml', name: 'jaxrpc-api', version: '1.1'
		implementation group: 'org.gnu.readline', name: 'libreadline-java', version: '0.8.0'
		implementation group: 'com.oracle', name: 'ojdbc14', version: '10.2.0.3.0'
		implementation group: 'au.com.bytecode', name: 'opencsv', version: '2.4'
		implementation group: 'org.postgresql', name: 'postgresql', version: '9.4.1212.jre7'
		implementation group: 'saaj', name: 'saaj', version: '1.1'
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.7'
        implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.7'
		implementation group: 'org.apache.velocity', name: 'velocity', version: '1.5'
		implementation group: 'xerces', name: 'xercesImpl', version: '2.9.1'
    }
}

project(':intermine:pathquery') {
	apply plugin: 'antlr'

    sourceSets {
        main {
            antlr {
                srcDirs = ['main/src']
            }
        }
    }


    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'pathquery'
                version '1.7'

                from components.java
            }
        }
    }

	dependencies {
       api project(':intermine:model')
       implementation group: 'stax', name: 'stax-ri', version: '1.0'
	}
}

project(':intermine:webtasks') {
    dependencies {
        api project(':intermine:web')
        api project(':intermine:integrate')
    }


    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'webtasks'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':intermine:web') {
	dependencies {
		api project(':intermine:api')
		api group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
		api group: 'org.apache.struts', name: 'struts-core', version: '1.3.10'
		api group: 'org.apache.struts', name: 'struts-extras', version: '1.3.10'
		api group: 'org.apache.struts', name: 'struts-taglib', version: '1.3.10'
		api group: 'org.apache.struts', name: 'struts-tiles', version: '1.3.10'
        implementation group: 'stringtree', name: 'stringtree-json', version: '2.0.5'
		implementation group: 'javax.activation', name: 'activation', version: '1.1'
		implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.50'
		implementation group: 'commons-chain', name: 'commons-chain', version: '1.2'
		implementation group: 'commons-codec', name: 'commons-codec', version: '1.9'
		implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.2.2'
		implementation group: 'commons-httpclient', name: 'commons-httpclient', version: '3.0'
		implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.2'
		implementation group: 'commons-validator', name: 'commons-validator', version: '1.3.1'
		implementation group: 'org.directwebremoting', name: 'dwr', version: '2.0.1'
		implementation group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.1'
		implementation group: 'org.jfree', name: 'jcommon', version: '1.0.17'
		implementation group: 'jdom', name: 'jdom', version: '1.1'
		implementation group: 'org.expressme', name: 'JOpenId', version: '1.08'
		implementation group: 'javax.servlet.jsp.jstl', name: 'jstl', version: '1.1'
		implementation group: 'javax.mail', name: 'javax.mail-api', version: '1.4.5'
		implementation group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.0'
		implementation group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.common', version: '1.0.0'
		implementation group: 'org.apache.poi', name: 'poi', version: '3.0-FINAL'
		implementation group: 'rome', name: 'rome', version: '0.9'
		implementation group: 'org.apache.struts', name: 'struts-core', version: '1.3.10'
		implementation group: 'org.apache.struts', name: 'struts-extras', version: '1.3.10'
		implementation group: 'org.apache.struts', name: 'struts-taglib', version: '1.3.10'
		implementation group: 'org.apache.struts', name: 'struts-tiles', version: '1.3.10'
		implementation group: 'strutstestcase', name: 'strutstestcase', version: '2.1.4-1.2-2.4'
		implementation group: 'org.apache.taglibs', name: 'taglibs-standard-impl', version: '1.2.1'
		implementation group: 'com.yahoo.platform.yui', name: 'yuicompressor', version: '2.4.6'
	}


    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'web'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':intermine:jbrowse-endpoint') {
    dependencies {
        api project(':intermine:web')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'jbrowse-endpoint'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':bio:core') {
	dependencies {
        api project(':intermine:api')
        api project(':intermine:integrate')
		implementation group: 'obo', name: 'bbop', version: '1.000'
		implementation group: 'jakarta-regexp', name: 'jakarta-regexp', version: '1.4'
		implementation group: 'com.hp.hpl.jena', name: 'jena', version: '2.6.4'
		implementation group: 'obo', name: 'obo', version: '1.000'
		implementation group: 'org.biojava', name: 'biojava', version: '1.7.1'
	}

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine.bio'
                artifactId 'bio-core'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':bio:tools') {
    dependencies {
        api project(':bio:core')
        api project(':intermine:integrate')
        api project(':intermine:api')
        api project(':dictymine:dbmodel')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'bio-tools'
                version '1.7'

                from components.java
            }
        }
    }
}

project(':bio:webapp') {
    sourceSets {
        main {
            java {
                srcDirs = ['src']
            }
            resources {
                srcDirs = ['resources']
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'bio-webapp'
                version '1.7'

                from components.java
            }
        }
    }

	dependencies {
        implementation project(':bio:core')
        implementation project(':bio:tools')
		implementation project(':intermine:jbrowse-endpoint')
		implementation project(':intermine:webtasks')
		implementation group: 'org.apache.axis', name: 'axis', version: '1.4'
		implementation group: 'org.biojava', name: 'biojava', version: '1.7.1'
		implementation group: 'psidev.psi.mi.jami.bridges', name: 'bridges-core', version: '1.1.0'
		implementation group: 'org.apache.commons', name: 'commons-dbcp', version: '1.1'
		implementation group: 'commons-discovery', name: 'commons-discovery', version: '0.4'
		implementation group: 'commons-pool', name: 'commons-pool', version: '1.1'
		implementation group: 'net.sf.ehcache', name: 'ehcache-core', version: '2.6.11'
		implementation group: 'psidev.psi.mi.jami', name: 'jami-commons', version: '1.1.3'
		implementation group: 'psidev.psi.mi.jami', name: 'jami-core', version: '1.2.2'
		implementation group: 'psidev.psi.mi.jami', name: 'jami-interactionviewer-json', version: '2.0.2'
		implementation group: 'psidev.psi.mi.jami', name: 'jami-mitab', version: '1.1.2'
		implementation group: 'psidev.psi.mi.jami.bridges', name: 'jami-ols', version: '1.1.0'
		implementation group: 'psidev.psi.mi.jami', name: 'jami-xml', version: '1.1.3'
		implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.7'
        implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.2.7'
		implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.7'
		implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
        implementation group: 'uk.ac.ebi', name: 'ols', version: '1.18'
        implementation group: 'uk.ac.ebi.ols', name: 'ols-client', version: '1.18'
        implementation group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3'
	}
}
	
project(':imbuild:im-ant-tasks') {
    dependencies {
        api group: 'org.apache.ant', name: 'ant', version: '1.6.5'
        api group: 'xalan', name: 'serializer', version: '2.7.0'
        api group: 'xalan', name: 'xalan', version: '2.7.0'
        api group: 'xml-apis', name: 'xml-apis', version: '1.3.02'
        api group: 'tomcat', name: 'catalina-ant', version: '5.5.23'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.intermine'
                artifactId 'im-ant-tasks'
                version '1.7'

                from components.java
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src']
            }
            resources {
                srcDirs = ['resources']
            }
        }
    }
}

project(':tasks') {
    dependencies {
        api gradleApi()
        api project(':dictymine:dbmodel')
        api project(':imbuild:im-ant-tasks')
        api group: 'org.apache.torque', name: 'torque-generator', version: '4.0'

    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId 'org.dictybase'
                artifactId 'dictymine-tasks'
                version '1.7'

                from components.java
            }
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main']
            }
            resources {
                srcDirs = ['src/resources']
            }
        }
    }
}
